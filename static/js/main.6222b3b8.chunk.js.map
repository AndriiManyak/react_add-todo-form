{"version":3,"sources":["api/users.js","api/todos.js","components/User/User.js","components/shapes/UserShape.js","components/Todo/Todo.js","components/shapes/TodoShape.js","components/TodoList/TodoList.js","components/TodoForm/TodoForm.js","App.js","index.js"],"names":["users","id","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todos","userId","title","completed","User","className","UserShape","PropTypes","shape","number","isRequired","string","Todo","bool","user","TodoList","map","todo","key","TodoForm","state","userName","titleError","userNameError","handleChange","event","target","value","type","setState","replace","handleSubmit","preventDefault","props","addTodo","trim","newUser","find","this","onSubmit","htmlFor","placeholder","onChange","React","PureComponent","prepearedTodos","todosFromServer","App","prevState","newTodo","length","ReactDOM","render","document","getElementById"],"mappings":"8UAyOeA,G,MAzOD,CACZ,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,wBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,yCACbC,GAAI,gCAGR,CACEhB,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,oBACPC,QAAS,CACPC,OAAQ,gBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,sBACPC,QAAS,gBACTC,QAAS,CACPb,KAAM,eACNc,YAAa,iCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,YACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,aAGTC,MAAO,iBACPC,QAAS,cACTC,QAAS,CACPb,KAAM,qBACNc,YAAa,oCACbC,GAAI,oCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,4BACPC,QAAS,CACPC,OAAQ,cACRC,MAAO,WACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,WACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,2CACbC,GAAI,yCAGR,CACEhB,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,2BACPC,QAAS,CACPC,OAAQ,eACRC,MAAO,YACPC,KAAM,aACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,gBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,cACNc,YAAa,uCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,oBACRC,MAAO,WACPC,KAAM,gBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,uBACPC,QAAS,UACTC,QAAS,CACPb,KAAM,oBACNc,YAAa,qCACbC,GAAI,qCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,YACRC,MAAO,YACPC,KAAM,YACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,WACTC,QAAS,CACPb,KAAM,cACNc,YAAa,qCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,uBACPC,QAAS,CACPC,OAAQ,mBACRC,MAAO,YACPC,KAAM,YACNC,QAAS,QACTC,IAAK,CACHC,IAAK,WACLC,IAAK,cAGTC,MAAO,oBACPC,QAAS,eACTC,QAAS,CACPb,KAAM,kBACNc,YAAa,gCACbC,GAAI,kCAGR,CACEhB,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,0BACPC,QAAS,CACPC,OAAQ,aACRC,MAAO,YACPC,KAAM,iBACNC,QAAS,aACTC,IAAK,CACHC,IAAK,UACLC,IAAK,cAGTC,MAAO,uBACPC,QAAS,aACTC,QAAS,CACPb,KAAM,gBACNc,YAAa,wCACbC,GAAI,qCAGR,CACEhB,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,yBACPC,QAAS,CACPC,OAAQ,kBACRC,MAAO,YACPC,KAAM,cACNC,QAAS,aACTC,IAAK,CACHC,IAAK,WACLC,IAAK,YAGTC,MAAO,eACPC,QAAS,cACTC,QAAS,CACPb,KAAM,aACNc,YAAa,oCACbC,GAAI,+BCnNKC,EAfD,CACZ,CACEC,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qBACPC,WAAW,GAEb,CACEF,OAAQ,EACRlB,GAAI,EACJmB,MAAO,qCACPC,WAAW,ICVFC,EAAO,SAAC,GAAD,IAAGpB,EAAH,EAAGA,KAAH,OAClB,yBAAKqB,UAAU,QAAf,gBACYrB,K,wBCHDsB,EAAYC,IAAUC,MAAM,CACvCzB,GAAIwB,IAAUE,OAAOC,WACrB1B,KAAMuB,IAAUI,OAAOD,aACtBA,WCCUE,GCHYL,IAAUC,MAAM,CACvCN,MAAOK,IAAUI,OAAOD,WACxBP,UAAWI,IAAUM,KAAKH,WAC1B3B,GAAIwB,IAAUE,OAAOC,WACrBI,KAAMR,IACLI,WDFiB,SAAC,GAAD,IAAGR,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAWW,EAArB,EAAqBA,KAArB,OAClB,yBAAKT,UAAU,uBACb,wBAAIA,UAAU,eACX,SACAH,GAGH,yBAAKG,UAAU,iBACb,kBAAC,EAASS,GAETX,EACG,yBAAKE,UAAU,wCAAf,aACA,yBAAKA,UAAU,gBAAf,qBEVGU,G,MAAW,SAAC,GAAD,IAAGf,EAAH,EAAGA,MAAH,OACtB,yBAAKK,UAAU,YACZL,EAAMgB,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,eACEC,IAAKD,EAAKlC,IACNkC,U,OCNCE,G,MAAb,4MACEC,MAAQ,CACNlB,MAAO,GACPmB,SAAU,GACVC,YAAY,EACZC,eAAe,GALnB,EAQEC,aAAe,SAACC,GAAW,IAAD,IACMA,EAAMC,OAA5B1C,EADgB,EAChBA,KAAM2C,EADU,EACVA,MAAOC,EADG,EACHA,KAErB,EAAKC,UAAL,mBACG7C,EAAgB,SAAT4C,EACJD,EAAMG,QAAQ,UAAW,IACzBH,GAHN,wBAIM3C,EAJN,UAIoB,GAJpB,KAXJ,EAmBE+C,aAAe,SAACN,GACdA,EAAMO,iBADkB,MAEI,EAAKZ,MAAzBlB,EAFgB,EAEhBA,MAAOmB,EAFS,EAETA,SAFS,EAGG,EAAKY,MAAxBC,EAHgB,EAGhBA,QAASpD,EAHO,EAGPA,MAUjB,GARKoB,EAAMiC,QACT,EAAKN,SAAS,CAAEP,YAAY,IAGb,kBAAbD,GAAiCA,GACnC,EAAKQ,SAAS,CAAEN,eAAe,IAG7BrB,EAAMiC,QAAUd,EAAU,CAC5B,IAAMe,EAAUtD,EAAMuD,MAAK,SAAAvB,GAAI,OAAIA,EAAK9B,OAASqC,KAEjD,EAAKQ,SAAS,CACZ3B,MAAO,GACPmB,SAAU,KAEZa,EAAQhC,EAAOkC,KAvCrB,uDA2CY,IACAtD,EAAUwD,KAAKL,MAAfnD,MADD,EAOHwD,KAAKlB,MAJPlB,EAHK,EAGLA,MACAmB,EAJK,EAILA,SACAC,EALK,EAKLA,WACAC,EANK,EAMLA,cAGF,OACE,0BACElB,UAAU,WACVkC,SAAUD,KAAKP,cAEf,2BACE1B,UAAU,kBACVmC,QAAQ,SAFV,mBAOA,2BACExD,KAAK,QACLD,GAAG,QACH0D,YAAY,OACZb,KAAK,OACLD,MAAOzB,EACPwC,SAAUJ,KAAKd,aACfnB,UAAU,oBAIViB,EACI,0BAAMjB,UAAU,mBAAhB,0BACA,GAGN,2BACEA,UAAU,kBACVmC,QAAQ,YAFV,iBAOA,4BACExD,KAAK,WACLD,GAAG,WACH4C,MAAON,EACPqB,SAAUJ,KAAKd,aACfnB,UAAU,mBAEV,iDACCvB,EAAMkC,KAAI,SAAAF,GAAI,OACb,4BACEI,IAAKJ,EAAK/B,GACV4C,MAAOb,EAAK9B,MAEX8B,EAAK9B,UAMVuC,EACI,0BAAMlB,UAAU,mBAAhB,wBACA,GAGN,4BACEuB,KAAK,SACLvB,UAAU,oBAFZ,YA/GR,GAA8BsC,IAAMC,gBCC9BC,EAAiBC,EAAgB9B,KAAI,SAAAC,GAAI,kCAC1CA,GAD0C,IAE7CH,KAAMhC,EAAMuD,MAAK,SAAAvB,GAAI,OAAIA,EAAK/B,KAAOkC,EAAKhB,eA2C7B8C,E,4MAvCb3B,MAAQ,CACNpB,MAAO6C,G,EAGTX,QAAU,SAAChC,EAAOY,GAChB,EAAKe,UAAS,SAACmB,GACb,IAAMC,EAAU,CACdhD,OAAQa,EAAK/B,GACbA,GAAIiE,EAAUhD,MAAMkD,OAAS,EAC7BhD,QACAC,WAAW,EACXW,QAGF,MAAO,CAAEd,MAAM,GAAD,mBAAMgD,EAAUhD,OAAhB,CAAuBiD,S,uDAI/B,IACAjD,EAAUsC,KAAKlB,MAAfpB,MAER,OACE,yBAAKK,UAAU,OACb,6CACA,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEL,MAAOA,IAGT,kBAAC,EAAD,CACElB,MAAOA,EACPoD,QAASI,KAAKJ,gB,GAhCRS,IAAMC,eCTxBO,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6222b3b8.chunk.js","sourcesContent":["const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const User = ({ name }) => (\n  <div className=\"User\">\n    {`Name: ${name}`}\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const UserShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n}).isRequired;\n","import React from 'react';\nimport { User } from '../User/User';\n\nimport './Todo.scss';\nimport { TodoShape } from '../shapes/TodoShape';\n\nexport const Todo = ({ title, completed, user }) => (\n  <div className=\"TodoList__Todo Todo\">\n    <h3 className=\"Todo__title\">\n      {'Task: '}\n      {title}\n    </h3>\n\n    <div className=\"Todo__details\">\n      <User {...user} />\n\n      {completed\n        ? <div className=\"Todo__status Todo__status--completed\">Completed</div>\n        : <div className=\"Todo__status\">Not completed</div>}\n    </div>\n  </div>\n);\n\nTodo.propTypes = TodoShape;\n","import PropTypes from 'prop-types';\nimport { UserShape } from './UserShape';\n\nexport const TodoShape = PropTypes.shape({\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n  user: UserShape,\n}).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Todo } from '../Todo';\nimport { TodoShape } from '../shapes/TodoShape';\n\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos }) => (\n  <div className=\"TodoList\">\n    {todos.map(todo => (\n      <Todo\n        key={todo.id}\n        {...todo}\n      />\n    ))}\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { UserShape } from '../shapes/UserShape';\n\nimport './TodoForm.scss';\n\nexport class TodoForm extends React.PureComponent {\n  state = {\n    title: '',\n    userName: '',\n    titleError: false,\n    userNameError: false,\n  }\n\n  handleChange = (event) => {\n    const { name, value, type } = event.target;\n\n    this.setState({\n      [name]: type === 'text'\n        ? value.replace(/[^\\w ]+/, '')\n        : value,\n      [`${name}Error`]: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { title, userName } = this.state;\n    const { addTodo, users } = this.props;\n\n    if (!title.trim()) {\n      this.setState({ titleError: true });\n    }\n\n    if (userName === 'Choose a user' || !userName) {\n      this.setState({ userNameError: true });\n    }\n\n    if (title.trim() && userName) {\n      const newUser = users.find(user => user.name === userName);\n\n      this.setState({\n        title: '',\n        userName: '',\n      });\n      addTodo(title, newUser);\n    }\n  }\n\n  render() {\n    const { users } = this.props;\n    const {\n      title,\n      userName,\n      titleError,\n      userNameError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"TodoForm\"\n        onSubmit={this.handleSubmit}\n      >\n        <label\n          className=\"TodoForm__label\"\n          htmlFor=\"title\"\n        >\n          Enter the title\n        </label>\n\n        <input\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"Task\"\n          type=\"text\"\n          value={title}\n          onChange={this.handleChange}\n          className=\"TodoForm__field\"\n        />\n\n        {\n          titleError\n            ? <span className=\"TodoForm__error\">Please enter the title</span>\n            : ''\n        }\n\n        <label\n          className=\"TodoForm__label\"\n          htmlFor=\"userName\"\n        >\n          Choose a user\n        </label>\n\n        <select\n          name=\"userName\"\n          id=\"userName\"\n          value={userName}\n          onChange={this.handleChange}\n          className=\"TodoForm__field\"\n        >\n          <option>Choose a user</option>\n          {users.map(user => (\n            <option\n              key={user.id}\n              value={user.name}\n            >\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {\n          userNameError\n            ? <span className=\"TodoForm__error\">Please choose a user</span>\n            : ''\n        }\n\n        <button\n          type=\"submit\"\n          className=\"TodoForm__submit\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport users from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst prepearedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.PureComponent {\n  state = {\n    todos: prepearedTodos,\n  }\n\n  addTodo = (title, user) => {\n    this.setState((prevState) => {\n      const newTodo = {\n        userId: user.id,\n        id: prevState.todos.length + 1,\n        title,\n        completed: false,\n        user,\n      };\n\n      return { todos: [...prevState.todos, newTodo] };\n    });\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <div className=\"App__wrapper\">\n          <TodoList\n            todos={todos}\n          />\n\n          <TodoForm\n            users={users}\n            addTodo={this.addTodo}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}